# .goreleaser.yaml
version: 2

# Build-related settings
builds:
  - id: "genie"
    binary: "genie"
    main: "./cmd"
    env:
      - "CGO_ENABLED=0"
    goos:
      - "linux"
      - "windows"
      - "darwin"
    goarch:
      - "amd64"
      - "arm64"
    ignore:
      # Windows ARM64 might have compatibility issues, can be excluded if needed
      # - goos: windows
      #   goarch: arm64
    ldflags:
      - "-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser"
    flags:
      - "-trimpath"

# Archive-related settings
archives:
  - id: "genie-archives"
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - "README.md"
      - "LICENSE"
      - "docs/**/*"

# Release-related settings
release:
  name_template: "{{ .ProjectName }} v{{ .Version }}"
  github:
    owner: "kcaldas"
    name: "genie"
  draft: true # Set to false for actual releases
  prerelease: auto

# Snapcraft (Snap) settings - commented out to avoid deprecation warnings
# snapcrafts:
#   - name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
#     name: "genie"
#     summary: "Genie CLI: AI-powered coding assistant"
#     description: "Genie is a Go-based AI coding assistant tool, providing both direct CLI commands and an interactive TUI for software engineering tasks."
#     grade: "stable"
#     confinement: "strict"
#     apps:
#       genie:
#         command: "genie"
#         plugs:
#           - "home"
#           - "network"
#           - "personal-files"

# Checksum settings
checksum:
  name_template: "checksums.txt"

# Changelog settings
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^style:"
      - "^refactor:"
      - "^chore:"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch

# Homebrew Cask (for macOS users) - v2 format
homebrew_casks:
  - name: genie
    repository:
      owner: kcaldas
      name: homebrew-genie # You need to create this repo: github.com/kcaldas/homebrew-genie
      branch: main
    directory: Casks
    homepage: "https://github.com/kcaldas/genie"
    description: "AI-powered coding assistant with CLI and TUI interfaces"
    license: MIT
    skip_upload: true # Set to false when you create the homebrew repo

# Docker images - simplified single platform build
dockers:
  - image_templates:
      - "ghcr.io/kcaldas/genie:{{ .Version }}"
      - "ghcr.io/kcaldas/genie:latest"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
      - "--label=org.opencontainers.image.source={{.GitURL}}"
      - "--label=org.opencontainers.image.license=MIT"
    skip_push: true # Set to false when ready to push to GitHub Container Registry

# macOS PKG installer
nfpms:
  - id: genie-pkg
    package_name: genie
    file_name_template: "genie_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    builds:
      - genie
    vendor: "Genie Project"
    homepage: "https://github.com/kcaldas/genie"
    maintainer: "Genie Team <noreply@github.com>"
    description: "ðŸ§ž Powerful AI assistant for your command line - Built with Go and Gemini AI"
    license: "MIT"
    formats:
      - pkg  # macOS installer
    bindir: /usr/local/bin
    contents:
      - src: "./LICENSE"
        dst: "/usr/local/share/doc/genie/LICENSE"
      - src: "./README.md"
        dst: "/usr/local/share/doc/genie/README.md"
      - src: "./docs/"
        dst: "/usr/local/share/doc/genie/docs/"
        type: "tree"
    scripts:
      postinstall: |
        #!/bin/bash
        echo "Genie installed successfully!"
        echo "Get started with: genie --help"
        echo "Or run interactive mode: genie"
        echo ""
        echo "Set your Gemini API key:"
        echo "export GEMINI_API_KEY=\"your-key\""
