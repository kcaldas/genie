@document.meta
title: Critical Issues Log
description: Known critical issues that need immediate attention
authors: genie
categories: bugs
created: 2025-01-18
updated: 2025-01-18
version: 1.0.0
@end

* Critical Issues Log

** CRITICAL - LLM Making Destructive Wholesale Changes Instead of Minimal Incremental Modifications

*** Issue Description
- When asked to make small changes (e.g., "add metrics tracking"), Genie performs massive destructive rewrites
- Instead of targeted 5-10 line changes, it completely replaces entire files
- Example: Asked to add metrics to core.go, it deleted 95% of the file content and left only a stub
- This turns working systems into broken systems

*** Reproduction Steps
1. Run: `go run ./cmd ask --accept-all "Can you add a feature to track the total number of chains executed?"`
2. Observe that core.go gets completely rewritten instead of minimal changes
3. File goes from ~227 lines to ~48 lines with most functionality removed

*** Expected Behavior
- Read existing file to understand structure
- Make surgical changes: add metrics field, update constructor, add increment call
- Preserve all existing functionality
- Change only what's necessary (5-10 lines max for this type of change)

*** Actual Behavior
- Completely rewrites files from scratch
- Removes most existing functionality
- Ignores existing code patterns and structure
- Creates broken, incomplete implementations

*** Root Cause Analysis
- The execution prompts (`execute_changes.yaml`) are not effectively enforcing minimal changes
- Despite instructions like "Make MINIMAL necessary changes", LLM still does wholesale rewrites
- LLM may not be properly reading existing files before making changes
- Planning phase may be suggesting overly broad changes instead of targeted ones

*** Required Fixes
1. **Strengthen execution prompts** with more explicit constraints:
   - MUST read existing file first with readFile tool
   - MUST preserve all existing functionality unless explicitly removing
   - MUST make only the minimal changes needed
   - MUST follow existing code patterns and structure
   
2. **Improve planning prompts** to suggest minimal changes:
   - Analyze what already exists before suggesting changes
   - Explicitly identify which specific lines need modification
   - Avoid suggesting full file rewrites for incremental features

3. **Add validation steps**:
   - Verify that essential functions/types are preserved
   - Check that file length doesn't decrease dramatically without reason
   - Warn if removing significant amounts of existing code

*** Test Cases Needed
- Simple feature addition (metrics tracking)
- Small text changes (bash confirmation title)
- Bug fixes that should only touch 1-2 lines
- Verify that working systems remain working after changes

*** Priority
**CRITICAL** - This issue makes Genie unusable for real development work as it destroys existing code instead of improving it.

*** Status
- Identified: 2025-01-18
- Assigned: TBD
- Status: Open

---

** Fixed Issues

*** Confirmation System Hanging with --accept-all Flag
*Status*: RESOLVED

- Issue: File generation confirmations were hanging instead of auto-accepting
- Root cause: Topic mismatch - handler published to `tool.diff.confirmation.request` but CLI listened to `user.confirmation.request`  
- Fix: Updated handler to use `request.Topic()` method
- Result: `--accept-all` now works correctly for file operations

*** LLM Not Following FILE: Format
*Status*: RESOLVED  

- Issue: LLM was refusing to create files, saying it "cannot directly create or modify files"
- Root cause: Execution prompt wasn't clear that LLM should output structured text, not use tools
- Fix: Updated `execute_changes.yaml` with clearer instructions about outputting FILE: format
- Result: LLM now generates correct structured responses for file creation