@document.meta
title: Genie Ideas & Future Considerations
description: Collection of ideas, enhancements, and future possibilities for Genie
authors: genie
categories: [project-management, ideas, brainstorming]
created: 2024-06-16
updated: 2024-06-16
version: 1.0.0
@end

* Genie Ideas & Future Considerations
  /Collection of ideas, enhancements, and future possibilities/

** Inbox
   1. ( ) Use claude code mcp or SDK as a tool to speed up the dogfooding and slowly replace by our tools
          *Feasibility: High | Size: M* - Requires implementing MCP client in tools package, parsing .mcp.json configs, handling stdio/HTTP transports
   2. ( ) Connect genie com bkper via mcp
          *Feasibility: High | Size: S* - Once MCP client is built, just configuration and bkper-specific handlers
   3. ( ) Add chain decision nodes
          *Feasibility: Very High | Size: S* - Add new StepType for decisions, implement conditional logic in chain.Run()
   4. ( ) Implement chain recursion node for repeated queries to same node
          *Feasibility: High | Size: S-M* - Add recursion support with loop limits, main complexity is preventing infinite loops
   5. ( ) Create tree tool for project structure analysis
          *Feasibility: Very High | Size: S* - Simple tool implementation following existing patterns, use filepath.Walk
   6. ( ) Local LLM with vector search index for semantic project search
          *Feasibility: Medium | Size: L* - Requires vector DB, embedding generation, local LLM integration, semantic search APIs
   7. ( ) Ensure chains use prompt executor as unified interface
          *Feasibility: Very High | Size: S* - Refactor function steps to optionally use prompt executor for consistency
   8. ( ) Add user confirmation capability to executors
          *Feasibility: High | Size: S* - Add confirmation prompts to executor, integrate with CLI input handling
   9. ( ) Auto-generate tool documentation in prompts from required_tools declaration
          *Feasibility: High | Size: M* - Parse tool metadata, generate markdown docs, inject into prompts dynamically
   10. ( ) AI personas with specialized tools - Create personas that ask questions and guide changes using specific toolsets
          *Feasibility: Medium | Size: L* - Design persona framework, tool assignment logic, personality-specific prompting
   11. ( ) Tool-based prompting strategy - Design prompting where AI remains focused through continuous tool usage
          *Feasibility: High | Size: M* - Implement tool-first conversation flow, prompt engineering for tool-centric responses
   12. ( ) Flexible persona system - Allow developers to create/modify personas with custom tooling and behaviors
          *Feasibility: Medium | Size: L* - Persona registry, config format, tool binding system, runtime persona loading
   13. ( ) Tool-specific prompting - Each tool provides its own prompting guidance and confirmation flows
          *Feasibility: High | Size: M* - Add prompt metadata to tools, tool-specific confirmation handlers, prompt composition
   14. ( ) Web frontend for Genie - Create web-based UI with tool palette and creation workspace
          *Feasibility: High | Size: L* - Design React/Vue frontend, WebSocket API for Genie backend, tool visualization
   15. ( ) Genie web component - Build reusable web component for embedding Genie chat interface
          *Feasibility: High | Size: M* - Custom elements API, shadow DOM for isolation, event-based communication
   16. ( ) Customizable Genie portal service - Allow users to customize their Genie instance via web interface
          *Feasibility: Medium | Size: L* - Settings API, theme system, tool configuration UI, user profiles
   17. ( ) Packaged Genie distribution - Bundle Genie with web UI for easy deployment
          *Feasibility: High | Size: M* - Docker container, Electron app, or self-contained binary with embedded web UI

** Advanced AI Capabilities

*** Learning & Adaptation
    - ( ) Project-specific knowledge accumulation

** Community & Open Source

*** Open Source Strategy
    - ( ) Core open source with enterprise features
    - ( ) Transparent development roadmap

** Contributing Ideas

To add ideas to this document:
1. Create a new entry under the inbox section
2. Use the `- ( )` checkbox format for trackability
3. Include brief description of the idea
4. Consider noting the rough implementation complexity
5. Update the document metadata version

*Remember: Ideas are cheap, execution is everything. Focus on ideas that provide clear user value and align with our core mission of making developers more productive.*
